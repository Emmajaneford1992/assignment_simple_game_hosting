{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\n\ninterface Server {\n  id: number;\n  name: string;\n  game: string;\n  players: number;\n  status: string;\n}\n\nexport default function Home() {\n  const [serverData, setServerData] = useState<Server[] | null>(null);\n  // you can update this fetching code if required but it's not necessary for the assignment.\n  useEffect(() => {\n    const fetchServerData = async () => {\n      try {\n        const response = await fetch(\"/api/mock\");\n        const data = await response.json();\n        setServerData(data);\n      } catch (error) {\n        console.error(\"Failed to fetch server data:\", error);\n      }\n    };\n\n    fetchServerData();\n  }, []);\n\n  return (\n\n    <div className=\"fixed w-screen h-[100vh] bg-slate-500 top-0 left-0\">\n   \n        {/* Title */}\n        <h1 className=\"text-2xl font-bold text-center p-5\">Minecraft Server Cards</h1>\n     \n         {/* Card Container */}\n         <div className=\"grid grid-cols-3 gap-5 p-6\">\n\n          {/* Card */}\n          {serverData &&\n            serverData.map((server) => ( \n              <Card key={server.id} server={server} />\n            ))\n          }\n\n        </div>\n          \n</div>\n\n  );\n}\n\n\nfunction Card({ server }: { server: Server }) {\n  return(\n    <div className=\"flex flex-col place-content-around p-5 bg-slate-400 w-100 h-60 rounded-lg drop-shadow-lg\">\n      <p>üåê <strong>Server Name:</strong> {server.name}</p>\n      <p>üéÆ <strong>Game Name:</strong> {server.game}</p>\n      <p>üë§ <strong>Player Count:</strong> {server.players}</p>\n      <p>{server.status == \"offline\" ? \"üî¥\" :\"üü¢\"} <strong>Status:</strong> {server.status}</p>\n      <button className= \"bg-teal-500 p-1 w-1/2 rounded-lg self-center drop-shadow-lg\" > \n        {server.status == \"offline\" ? \"Start Server\" :\"Stop Server\"}\n        </button>\n    </div>\n  )\n\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AAWe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAC9D,2FAA2F;IAC3F,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,cAAc;YAChB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;YAChD;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBAEE,8OAAC;QAAI,WAAU;;0BAGX,8OAAC;gBAAG,WAAU;0BAAqC;;;;;;0BAGlD,8OAAC;gBAAI,WAAU;0BAGb,cACC,WAAW,GAAG,CAAC,CAAC,uBACd,8OAAC;wBAAqB,QAAQ;uBAAnB,OAAO,EAAE;;;;;;;;;;;;;;;;AASlC;AAGA,SAAS,KAAK,EAAE,MAAM,EAAsB;IAC1C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;oBAAE;kCAAG,8OAAC;kCAAO;;;;;;oBAAqB;oBAAE,OAAO,IAAI;;;;;;;0BAChD,8OAAC;;oBAAE;kCAAG,8OAAC;kCAAO;;;;;;oBAAmB;oBAAE,OAAO,IAAI;;;;;;;0BAC9C,8OAAC;;oBAAE;kCAAG,8OAAC;kCAAO;;;;;;oBAAsB;oBAAE,OAAO,OAAO;;;;;;;0BACpD,8OAAC;;oBAAG,OAAO,MAAM,IAAI,YAAY,OAAM;oBAAK;kCAAC,8OAAC;kCAAO;;;;;;oBAAgB;oBAAE,OAAO,MAAM;;;;;;;0BACpF,8OAAC;gBAAO,WAAW;0BAChB,OAAO,MAAM,IAAI,YAAY,iBAAgB;;;;;;;;;;;;AAKtD"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}