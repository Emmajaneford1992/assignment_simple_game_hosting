{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  Welcome to the simplegamehosting coding assignment!\n\n  if you got this far great job! ðŸŽ‰\n  Now it's your turn to shine! ðŸŒŸ\n  \n  The mock data is fetched from the server and displayed on the page.\n\n  Your task is to create a dynamic card component for each server in the list.\n  - The card should display the server's name, game, players, status, version etc, bonus points for displaying any extra data from the json response.\n  - please use tailwind to style your components, you can use the existing styles in this file as a reference.\n  - You can also use any other libraries you like to help you build the UI.\n  \n  for extra info please read the README.md file in the root of the project.\n*/\n\nexport default function Home() {\n  const [serverData, setServerData] = useState(null);\n  // you can update this fetching code if required but it's not necessary for the assignment.\n  useEffect(() => {\n    const fetchServerData = async () => {\n      try {\n        const response = await fetch(\"/api/mock\");\n        const data = await response.json();\n        setServerData(data);\n      } catch (error) {\n        console.error(\"Failed to fetch server data:\", error);\n      }\n    };\n\n    fetchServerData();\n  }, []);\n\n  return (\n    <div className=\"grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]\">\n      {/* main can be deleted and replaced with your own cards */}\n      <main className=\"flex flex-col gap-8 row-start-2 items-center sm:items-start\">\n        <h1 className=\"text-2xl font-bold\">Minecraft Server List</h1>\n        <p className=\"text-gray-600\">\n          Below is the JSON data fetched from <code>/api/mock</code>. Use it to\n          build the UI.\n        </p>\n        <pre className=\"bg-gray-200 text-gray-800 p-4 rounded-lg w-full overflow-auto max-w-4xl text-sm\">\n          {serverData ? JSON.stringify(serverData, null, 2) : \"Loading data...\"}\n        </pre>\n      </main>\n      {/* main can be deleted and replaced with your own cards */}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAmBe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,2FAA2F;IAC3F,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,cAAc;YAChB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;YAChD;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;kBAEb,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAG,WAAU;8BAAqB;;;;;;8BACnC,8OAAC;oBAAE,WAAU;;wBAAgB;sCACS,8OAAC;sCAAK;;;;;;wBAAgB;;;;;;;8BAG5D,8OAAC;oBAAI,WAAU;8BACZ,aAAa,KAAK,SAAS,CAAC,YAAY,MAAM,KAAK;;;;;;;;;;;;;;;;;AAM9D"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/emmaford/Documents/Code/assignment_simple_game_hosting/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}